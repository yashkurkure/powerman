---
- name: Configure NFS server.
  become: true
  hosts: headnode
  tasks:

    - name: Install NFS server.
      command: apt install -y nfs-kernel-server

    - name: Create NFS directory pbsusers.
      command: mkdir -p /pbsusers

    # - name: Create NFS directory common.
    #   command: mkdir -p /nfs/common

    - name: Backup original /etc/exports.
      command: mv /etc/exports /etc/exports.orig

    - name: Write to /etc/exports.
      shell: |
        echo "/pbsusers *(rw,no_subtree_check,insecure,no_root_squash)" > /etc/exports
    
    - name: Check if the service is running
      ansible.builtin.service:
        name:  nfs-kernel-server
      register: service_status

    - name: Restart the service if running
      ansible.builtin.service:
        name:  nfs-kernel-server
        state: restarted
      when: service_status.state == 'running'

    - name: Start the service if not running
      ansible.builtin.service:
        name:  nfs-kernel-server
        state: started
      when: service_status.state == 'stopped'
    
    # TODO: It does not like having '-' in the hostname
    # - name: Write worker nodes to /etc/exports.
    #   command: >
    #     bash -c '
    #     for ((i=0; i<{{ numworkernodes }}; i++)); do
    #       workerhostname=$(hostname | sed "s/head/node$i/")
    #       echo "/nfs/pbsusers $workerhostname(rw,no_subtree_check)" >> /etc/exports
    #       echo "/nfs/common $workerhostname(rw,no_subtree_check)" >> /etc/exports
    #     done'
    
    # - name: Write login node to /etc/exports.
    #   command: >
    #     bash -c '
    #       loginhostname=$(hostname | sed "s/head/login/")
    #       echo "/nfs/pbsusers $loginhostname(rw,no_subtree_check,insecure)" >> /etc/exports'
    #       echo "/nfs/common $loginhostname(rw,no_subtree_check,insecure)" >> /etc/exports'


    # - name: Start NFS server.
    #   command: systemctl start nfs-kernel-server

    - name: Create test files.
      shell: |
        echo "Hello from $(hostname)" >> /pbsusers/test.txt

- name: Configure NFS clients.
  become: true
  hosts: multi
  tasks:

    - name: Install NFS client.
      command: apt install -y nfs-common

    # Instead use AutoFS
    # - name: Create NFS mount point.
    #   command: mkdir -p /pbsusers

    # - name: Mount the NFS directory.
    #   command: mount {{ serverhostname }}:/pbsusers /pbsusers

    - name: Install AutoFS.
      command: apt install -y autofs

    - name: Create NFS directory pbsusers.
      command: mkdir -p /pbsusers

    # - name: Create NFS directory common.
    #   command: mkdir -p /nfs/common

    - name: Configure AutoFS - /etc/auto.master.
      shell: |
        echo "/ /etc/auto.nfs --ghost --timeout=60" >> /etc/auto.master

    - name: Configure AutoFS - /etc/auto.nfs.
      shell: |
        echo "pbsusers -fstype=nfs4,rw {{ serverhostname }}:/pbsusers" >> /etc/auto.nfs

    # - name: Restart AutoFS.
    #   shell: systemctl restart autofs
    
    - name: Check if the service is running
      ansible.builtin.service:
        name:  autofs
      register: service_status

    - name: Restart the service if running
      ansible.builtin.service:
        name:  autofs
        state: restarted
      when: service_status.state == 'running'

    - name: Start the service if not running
      ansible.builtin.service:
        name:  autofs
        state: started
      when: service_status.state == 'stopped'
