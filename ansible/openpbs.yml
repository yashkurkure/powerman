---
- name: Install OpenPBS deps
  become: true
  hosts: all:!datanodes
  tasks:

    - name: Update & Install OpenPBS deps
      ansible.builtin.apt:
        update_cache: yes
        pkg:
        - expat
        - libedit2
        - postgresql
        - python3.9
        - postgresql-contrib
        - sendmail-bin
        - sudo
        - tcl
        - tk
        - libical3
        - postgresql-server-dev-all
        - python3-pip

# --extra-vars "headnodes_deb=/path/to/headnodes.deb workernodes_deb=/path/to/workernodes.deb loginnodes_deb=/path/to/loginnodes.deb"
- name: Install OpenPBS
  become: true
  hosts: all:!datanodes
  tasks:

    - name: Install openpbs .deb package
      ansible.builtin.apt:
        deb: "{{ lookup('vars', item + '_deb') }}"
      with_items: "{{ group_names[0] }}" 

- name: Configure worker nodes.
  become: true
  hosts: workernodes
  tasks:
    
    # - name: Install a openpbs .deb package
    #   ansible.builtin.apt:
    #     deb: /local/repository/packages/openPBS/openpbs_23.06.06.ubuntu_20.04/openpbs_execution.deb

    - name: Configure OpenPBS at /etc/pbs.conf
      shell: |
        echo "PBS_EXEC=/opt/pbs
        PBS_SERVER={{ serverhostname }}
        PBS_START_SERVER=0
        PBS_START_SCHED=0
        PBS_START_COMM=0
        PBS_START_MOM=1
        PBS_MOM_NODE_NAME=$(hostname)
        PBS_HOME=/var/spool/pbs
        PBS_CORE_LIMIT=unlimited
        PBS_SCP=/usr/bin/scp" > /etc/pbs.conf

    - name: Manage pbs service
      service:
        name: pbs
        state: restarted
        enabled: yes
    
    - name: Configure MoM usecp
      lineinfile:
        path: /var/spool/pbs/mom_priv/config
        line: '$usecp *:/pbsusers/ /pbsusers/'
        create: yes
    
    - name: HUP MoM
      shell: |
        kill -HUP `ps aux | grep /opt/pbs/sbin/pbs_mom | awk '{print $2}' | head -n 1`

- name: Configure login nodes.
  become: true
  hosts: loginnodes
  tasks:
    
    # - name: Install a .deb package
    #   ansible.builtin.apt:
    #     deb: /local/repository/packages/openPBS/openpbs_23.06.06.ubuntu_20.04/openpbs_client.deb

    - name: Configure OpenPBS at /etc/pbs.conf
      shell: |
        echo "PBS_EXEC=/opt/pbs
        PBS_SERVER={{ serverhostname }}
        PBS_START_SERVER=0
        PBS_START_SCHED=0
        PBS_START_COMM=0
        PBS_START_MOM=0
        PBS_HOME=/var/spool/pbs
        PBS_CORE_LIMIT=unlimited
        PBS_SCP=/usr/bin/scp" > /etc/pbs.conf

- name: Configure head node.
  become: true
  hosts: headnode
  tasks:
    
    # - name: Install a .deb package
    #   ansible.builtin.apt:
    #     deb: /local/repository/packages/openPBS/openpbs_23.06.06.ubuntu_20.04/openpbs_server.deb

    - name: Configure OpenPBS at /etc/pbs.conf
      shell: |
        echo "PBS_EXEC=/opt/pbs
        PBS_SERVER=$(hostname)
        PBS_START_SERVER=1
        PBS_START_SCHED=1
        PBS_START_COMM=1
        PBS_START_MOM=0
        PBS_HOME=/var/spool/pbs
        PBS_CORE_LIMIT=unlimited
        PBS_SCP=/usr/bin/scp" > /etc/pbs.conf

    - name: Give postgres user permissions for pbs directory.
      file:
        path: /var/spool/pbs/datastore
        state: directory 
        owner: postgres
        group: postgres
        recurse: yes

    - name: Start postresql service
      service:
        name: postgresql
        state: started

    - name: Start pbs service
      environment:
        PBS_DATA_SERVICE_USER: postgres
      service:
        name: pbs
        state: started
  
    - name: Create worker nodes
      command: >
        bash -c '
        for ((i=0; i<{{ numworkernodes }}; i++)); do
          workerhostname=$(hostname | sed "s/head/node$i/")
          workercanonicalname=$(nslookup $workerhostname | grep Name | awk "{print $2}")
          /opt/pbs/bin/qmgr -c "create node $workerhostname"
        done'