---
- name: Configure worker nodes.
  become: true
  hosts: workernodes
  tasks:

    - name: Configure OpenPBS at /etc/pbs.conf
      shell: |
        echo "PBS_EXEC=/opt/pbs
        PBS_SERVER={{ serverhostname }}
        PBS_START_SERVER=0
        PBS_START_SCHED=0
        PBS_START_COMM=0
        PBS_START_MOM=1
        PBS_MOM_NODE_NAME=$(hostname)
        PBS_HOME=/var/spool/pbs
        PBS_CORE_LIMIT=unlimited
        PBS_SCP=/usr/bin/scp" > /etc/pbs.conf
  
    - name: Start OpenPBS service.
      command: systemctl start pbs

    - name: Configure OpenPBS to start automatically during system boot.
      command: systemctl enable pbs

- name: Configure login nodes.
  become: true
  hosts: loginnodes
  tasks:

    - name: Configure OpenPBS at /etc/pbs.conf
      shell: |
        echo "PBS_EXEC=/opt/pbs
        PBS_SERVER={{ serverhostname }}
        PBS_START_SERVER=0
        PBS_START_SCHED=0
        PBS_START_COMM=0
        PBS_START_MOM=0
        PBS_HOME=/var/spool/pbs
        PBS_CORE_LIMIT=unlimited
        PBS_SCP=/usr/bin/scp" > /etc/pbs.conf

- name: Configure head node.
  become: true
  hosts: headnode
  tasks:

    - name: Configure OpenPBS at /etc/pbs.conf
      shell: |
        echo "PBS_EXEC=/opt/pbs
        PBS_SERVER=$(hostname)
        PBS_START_SERVER=1
        PBS_START_SCHED=1
        PBS_START_COMM=1
        PBS_START_MOM=0
        PBS_HOME=/var/spool/pbs
        PBS_CORE_LIMIT=unlimited
        PBS_SCP=/usr/bin/scp" > /etc/pbs.conf
  
    - name: Create datastore for postgress under pbs.
      command: mkdir -p /var/spool/pbs/datastore

    - name: Give postgres user permissions for pbs directory.
      command: chown -R postgres:postgres /var/spool/pbs/datastore

    - name: Start postgresql.
      command: pg_ctlcluster 12 main start

    - name: Start pbs.
      environment:
        PBS_DATA_SERVICE_USER: postgres
      command: systemctl start pbs
  
    - name: Create worker nodes
      command: >
        bash -c '
        for ((i=0; i<{{ numworkernodes }}; i++)); do
          workerhostname=$(hostname | sed "s/head/node$i/")
          workercanonicalname=$(nslookup $workerhostname | grep Name | awk "{print $2}")
          /opt/pbs/bin/qmgr -c "create node $workerhostname"
        done'